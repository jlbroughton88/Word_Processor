{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext, useContext, useEffect, useState } from \"react\";\nexport const EnvContext = createContext();\nexport const useEnv = () => useContext(EnvContext); // export const EnvProvider = props => {\n//     const [statusUrl, setStatusUrl] = useState(\"thisshouldshowup\");\n//     useEffect(() => {\n//         if(process.env.NODE_ENV === \"development\") {\n//             setStatusUrl(\"http://localhost:3000\")\n//         } else {\n//             setStatusUrl(\"https://word-processor.now.sh\")\n//         }\n//     }, [])\n//     return (\n//         <EnvContext.Provider value={statusUrl}>\n//             {props.children}\n//         </EnvContext.Provider>\n//     )\n// }\n\nexport class EnvProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      statusUrl: \"\"\n    });\n  }\n\n  componentDidMount() {\n    if (false) {\n      this.setState({\n        statusUrl: \"http://localhost:3000\"\n      });\n    } else {\n      this.setState({\n        statusUrl: \"https://word-processor.now.sh\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      statusUrl\n    } = this.state;\n    return __jsx(EnvContext.Provider, {\n      value: statusUrl\n    }, this.props.children);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}