{"ast":null,"code":"var _jsxFileName = \"/Users/JacobBroughton/coding/projects/Word_Processor/pages/comps/contexts/envContext.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext, useContext, useEffect, useState } from \"react\";\nexport const EnvContext = createContext();\nexport const useEnv = () => useContext(EnvContext); // export const EnvProvider = props => {\n//     const [statusUrl, setStatusUrl] = useState(\"thisshouldshowup\");\n//     useEffect(() => {\n//         if(process.env.NODE_ENV === \"development\") {\n//             setStatusUrl(\"http://localhost:3000\")\n//         } else {\n//             setStatusUrl(\"https://word-processor.now.sh\")\n//         }\n//     }, [process.env.NODE_ENV])\n//     return (\n//         <EnvContext.Provider value={statusUrl}>\n//             {console.log(\"This is what the app sees: \" + statusUrl)}\n//             {props.children}\n//         </EnvContext.Provider>\n//     )\n// }\n\nexport class EnvProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      statusUrl: \"\"\n    });\n  }\n\n  componentDidMount() {\n    if (true) {\n      this.setState({\n        statusUrl: \"http://localhost:3000\"\n      });\n    } else {\n      this.setState({\n        statusUrl: \"https://word-processor.now.sh\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      statusUrl\n    } = this.state;\n    return __jsx(EnvContext.Provider, {\n      value: statusUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/Users/JacobBroughton/coding/projects/Word_Processor/pages/comps/contexts/envContext.js"],"names":["React","Component","createContext","useContext","useEffect","useState","EnvContext","useEnv","EnvProvider","statusUrl","componentDidMount","setState","render","state","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,EAA0CC,UAA1C,EAAsDC,SAAtD,EAAiEC,QAAjE,QAAiF,OAAjF;AAEA,OAAO,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AAEP,OAAO,MAAMK,MAAM,GAAG,MAAMJ,UAAU,CAACG,UAAD,CAA/B,C,CAEP;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC/B;AACJQ,MAAAA,SAAS,EAAE;AADP,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AAChB,cAA2C;AACvC,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAFD,MAEO;AACH,WAAKE,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEH,MAAAA;AAAF,QAAgB,KAAKI,KAA3B;AAEA,WACI,MAAC,UAAD,CAAY,QAAZ;AACI,MAAA,KAAK,EAAEJ,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKK,KAAL,CAAWC,QAHhB,CADJ;AAOH;;AAxBsC","sourcesContent":["import React, { Component, createContext, useContext, useEffect, useState } from \"react\";\n\nexport const EnvContext = createContext();\n\nexport const useEnv = () => useContext(EnvContext);\n\n// export const EnvProvider = props => {\n\n//     const [statusUrl, setStatusUrl] = useState(\"thisshouldshowup\");\n\n//     useEffect(() => {\n//         if(process.env.NODE_ENV === \"development\") {\n//             setStatusUrl(\"http://localhost:3000\")\n//         } else {\n//             setStatusUrl(\"https://word-processor.now.sh\")\n//         }\n//     }, [process.env.NODE_ENV])\n\n//     return (\n//         <EnvContext.Provider value={statusUrl}>\n//             {console.log(\"This is what the app sees: \" + statusUrl)}\n//             {props.children}\n//         </EnvContext.Provider>\n//     )\n// }\n\nexport class EnvProvider extends Component {\n    state = {\n        statusUrl: \"\"\n    };\n\n    componentDidMount() {\n        if(process.env.NODE_ENV === \"development\") {\n            this.setState({ statusUrl: \"http://localhost:3000\" })\n        } else {\n            this.setState({ statusUrl: \"https://word-processor.now.sh\" })\n        }\n    }\n\n    render() {\n\n        const { statusUrl } = this.state;\n\n        return (\n            <EnvContext.Provider\n                value={statusUrl}\n            >\n                {this.props.children}\n            </EnvContext.Provider>\n        )\n    }\n} \n\n"]},"metadata":{},"sourceType":"module"}