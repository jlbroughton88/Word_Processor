{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, createContext, useContext, useEffect, useState } from \"react\";\nexport const EnvContext = createContext();\nexport const useEnv = () => useContext(EnvContext);\n\nconst EnvProvider = props => {\n  const {\n    0: statusUrl,\n    1: setStatusUrl\n  } = useState(\"\");\n  useEffect(() => {\n    if (false) {\n      setStatusUrl(\"http://localhost:3000\");\n    } else {\n      setStatusUrl(\"https://word-processor.now.sh\");\n    }\n  }, []);\n  return __jsx(EnvContext.Provider, {\n    value: statusUrl\n  }, props.children);\n};\n\nexport default EnvProvider; // export class EnvProvider extends Component {\n//     state = {\n//         statusUrl: \"\"\n//     };\n//     componentDidMount() {\n//         if(process.env.NODE_ENV === \"development\") {\n//             this.setState({ statusUrl: \"http://localhost:3000\" })\n//         } else {\n//             this.setState({ statusUrl: \"https://word-processor.now.sh\" })\n//         }\n//     }\n//     render() {\n//         const { statusUrl } = this.state;\n//         return (\n//             <EnvContext.Provider\n//                 value={statusUrl}\n//             >\n//                 {this.props.children}\n//             </EnvContext.Provider>\n//         )\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}